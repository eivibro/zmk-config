/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// norwegian definitions below
#define OE	 SEMI	   // Æ
#define AE	 SQT	   // Ø
#define AA	 LBKT	   // Å
#define NO_PIPE	 GRAVE	   // |
#define NO_AT 	 RA(N2)    // @
#define NO_DLLR	 RA(N4)    // $
#define NO_AMPS	 LS(N6)	   // &
#define NO_STAR	 LS(BSLH)  // *
#define NO_FSLH  LS(N7)    // /
#define NO_LPAR	 LS(N8)    // (
#define NO_RPAR	 LS(N9)    // )
#define NO_LBKT  RA(N8)    // [
#define NO_RBKT  RA(N9)    // ]
#define NO_LBRC	 RA(N7)	   // {
#define NO_RBRC	 RA(N0)	   // }
#define NO_PLUS	 MINUS     // +
#define NO_DASH	 FSLH      // -
#define NO_APOS	 BSLH      // '
#define NO_EQL	 LS(N0)    // =
#define NO_QMARK LS(NO_PLUS) // ? 
#define NO_QUOT	 LS(N2)    // "
#define NO_TILDE RA(RBKT)  // ~ 
#define NO_LESS  NON_US_BACKSLASH // <
#define NO_MORE  LS(NON_US_BACKSLASH) // >
#define NO_BSLH  0x2E      // \

&mt {
      flavor = "tap-preferred";
      tapping_term_ms = <350>;
};

/ { 
    combos {
        compatible = "zmk,combos";
        combo_esc { 
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
	    layers = <0>;
        };
        combo_tab { 
            timeout-ms = <50>;
            key-positions = <1 3>;
            bindings = <&kp TAB>;
	    layers = <0>;
       };
        combo_del { 
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp DEL>;
	    layers = <0>;
       };
        combo_spc { 
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp SPACE>;
	    layers = <0>;
       };

   };
    behaviors {
	dth: double-tap-to-hold{
            compatible = "zmk,behavior-hold-tap";
            label = "DOUBLETAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
            
    };

        keymap {
		compatible = "zmk,keymap";
      		default_layer {
		bindings = <
		&kp AA 	   &kp COMMA &kp DOT &kp P &kp Y		  		&kp F &kp G &kp C &kp R &kp L 
		&mt LALT A &kp O     &kp E   &kp U &kp I 	       	     		&kp D &kp H &kp T &kp N &kp S
		&dth AE OE &kp Q     &kp J   &kp K &kp X	             		&kp B &kp M &kp W &kp V &kp Z 
          			&dth LSHIFT BACKSPACE &dth LGUI SPACE 	     		&dth LCTRL RET &to 1
		>;
		};

       		left_layer {
		bindings = <
		&kp NO_PIPE &kp EXCL     &kp NO_AT   &kp HASH    &kp NO_DLLR         		&kp PRCNT   &kp NO_AMPS &kp NO_FSLH &kp NO_LPAR &kp NO_RPAR 
		&kp G 	    &kp NO_QUOT  &kp NO_APOS &kp NO_LESS &kp NO_MORE         		&kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp NO_DASH
		&kp LCTRL   &kp NO_TILDE &kp NO_BSLH &kp NO_EQL  &kp NO_QMARK 	     		&kp KP_NLCK &kp NO_LBRC &kp NO_LBKT &kp NO_RBKT &kp NO_RBRC
					    		  	&to 0  &to 2            	&trans  &to 3 
		>;
		};

		right_layer {
		bindings = <
		&mkp RCLK &mwh SCROLL_LEFT &mmv MOVE_UP       &mwh SCROLL_RIGHT &mkp LCLK       &kp KP_DIVIDE   &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp KP_MINUS 
		&kp HASH  &mmv MOVE_LEFT   &mmv MOVE_DOWN     &mmv MOVE_RIGHT   &kp SCLN   	&kp KP_MULTIPLY &kp NUM_4 &kp NUM_5 &kp NUM_6 &kp KP_PLUS
		&kp LSFT  &kp KPLS 	   &mwh SCROLL_DOWN   &mwh SCROLL_UP    &kp BSLH   	&kp KP_N0       &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp KP_DOT
					  			&to 0 &dth LGUI BACKSPACE      	&kp KP_ENTER    &to 3 
		>;
		};	
		
		tri_layer {
		bindings = <
		&out OUT_USB &trans       &kp K_MUTE   &kp K_PLAY_PAUSE &kp K_STOP2     	&ext_power EP_ON  &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &out OUT_USB       
		&out OUT_BLE &kp C_BRI_UP &kp K_VOL_UP &kp K_PREV       &kp K_NEXT      	&ext_power EP_OFF &bt BT_SEL 4  &bt BT_SEL 5 &bt BT_SEL 6 &out OUT_BLE
		&trans       &kp C_BRI_DN &kp K_VOL_DN &trans   	&trans          	&bt BT_CLR     	  &bt BT_SEL 7  &bt BT_SEL 8 &bt BT_SEL 9 &ext_power EP_OFF           
									&to 0 &to 0             &kp KP_ENTER &to 4			      	     		
		>;
		};	

        	cs_layer {
		bindings = <
		&kp TAB    &kp Q     &kp W     &kp E     &dth NUM_8 R                       	&kp F1 &kp NUM_1     &kp NUM_2 &kp NUM_3 &kp ESC
		&kp LSHIFT &kp A     &kp S     &kp D     &dth NUM_9 F   	             	&kp B  &kp NUM_4     &kp NUM_5 &kp NUM_6 &kp NUM_0
		&kp LCTRL  &dth NUM_5 NUM_1 &dth NUM_6 NUM_2 &dth NUM_7 NUM_3 &kp NUM_4		&kp F2 &kp NUM_7     &kp NUM_8 &kp NUM_9 &kp F3
									&kp SPACE &kp SPACE	&to 0 &kp F4
		>;
		};	
        
	};
};
