/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// norwegian definitions below
#define AE	 SEMI	   // Æ
#define OE	 SQT	   // Ø
#define AA	 LBKT	   // Å
#define NO_PIPE	 GRAVE	   // |
#define NO_AT 	 RA(N2)    // @
#define NO_DLLR	 RA(N4)    // $
#define NO_AMPS	 LS(N6)	   // &
#define NO_STAR	 LS(BSLH)  // *
#define NO_FSLH  LS(N7)    // /
#define NO_LPAR	 LS(N8)    // (
#define NO_RPAR	 LS(N9)    // )
#define NO_LBKT  RA(N8)    // [
#define NO_RBKT  RA(N9)    // ]
#define NO_LBRC	 RA(N7)	   // {
#define NO_RBRC	 RA(N0)	   // }
#define NO_PLUS	 MINUS     // +
#define NO_DASH	 FSLH      // -
#define NO_APOS	 BSLH      // '
#define NO_EQL	 LS(N0)    // =
#define NO_QMARK LS(NO_PLUS) // ? 
#define NO_QUOT	 LS(N2)    // "
#define NO_TILDE RA(RBKT)  // ~ 
#define NO_LESS  NON_US_BACKSLASH // <
#define NO_MORE  LS(NON_US_BACKSLASH) // >
#define NO_BLSH	 RA(NON_US_BACKSLASH) // \

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 
    behaviors {
	dth: double-tap-to-hold{
            compatible = "zmk,behavior-hold-tap";
            label = "DOUBLETAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
            
    };

        keymap {
		compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&dth AA ESC &kp COMMA &kp DOT &kp P &kp Y 			&kp F &kp G &kp C &kp R &kp L 
		&dth A 	TAB &kp O     &kp E   &kp U &kp I 		       	&kp D &kp H &kp T &kp N &kp S
		&dth OE AE  &kp Q     &kp J   &kp K &kp X		        &kp B &kp M &kp W &kp V &kp Z 
          			&dth LGUI BACKSPACE &dth LSHIFT SPACE  		&dth LCTRL RET &to 1
		>;
		};

       		left_layer {
		bindings = <
		&kp NO_PIPE  &kp EXCL     &kp NO_AT       &kp HASH         &kp NO_DLLR         &kp PRCNT &kp NO_AMPS &kp NO_FSLH  &kp NO_LPAR &kp NO_RPAR 
		&kp TAB      &kp LC(S)    &kp DQT         &kp PIPE2        &kp HASH 	       &kp MINUS &kp EQL     &kp LBKT     &kp RBKT    &kp DEL 
		&kp ESC      &kp NO_TILDE &kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2 	       &kp MINUS &kp GRAVE   &kp LBKT     &kp RBKT    &kp DEL 
					    &to 0  &kp LGUI  				       &kp RGUI &mo 2 
		>;
		};
		
		right_layer {
		bindings = <
		&kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
		&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
		&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
					  &mo 3 &kp LCTL  				&kp SPC  &mo 2 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};
